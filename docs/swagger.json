{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Geeks team app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Geeks team app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://geeks-backend-project.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Articles",
      "description": "Operations about articles."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Users",
      "description": "Operations about authors."
    }
  ],
  "paths": {
    "/articles": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get list of articles",
        "operationId": "getArticles",
        "description": "Get list of articles with this endpoint",
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found articles!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found articles!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "articles",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "articles": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/articles"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Articles"
        ],
        "summary": "Create an article",
        "operationId": "createArticle",
        "description": "Create an article with form-data including image upload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "article",
                  "img"
                ],
                "properties": {
                  "title": {
                    "description": "Article title",
                    "type": "string",
                    "example": "When anxiety fills the space: the path to peace"
                  },
                  "article": {
                    "description": "Contents of the article",
                    "type": "string",
                    "example": "In today`s world, where the rapid pace of events and the endless flow of information often rob us of our inner peace, finding harmony in everyday life becomes a real challenge"
                  },
                  "img": {
                    "description": "Upload article image (max 1MB)",
                    "type": "string",
                    "format": "binary"
                  },
                  "desc": {
                    "description": "Short description of the article",
                    "type": "string",
                    "example": "Meditations that help restore inner peace"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created an article",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created an article!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/articles"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/articles/{articleId}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get article by id",
        "operationId": "getArticle",
        "description": "Get article by id",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "articleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "68498236a100312bea079036"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get article by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found article with id 68498236a100312bea079036!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/articles"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Articles"
        ],
        "summary": "Update an article",
        "operationId": "updateArticle",
        "description": "Update an article with form-data including image upload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "articleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "686809896ac14799aa90b54a"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "Article title",
                    "type": "string",
                    "example": "When anxiety fills the space: the path to peace"
                  },
                  "article": {
                    "description": "Contents of the article",
                    "type": "string",
                    "example": "In today`s world, where the rapid pace of events and the endless flow of information often rob us of our inner peace, finding harmony in everyday life becomes a real challenge"
                  },
                  "img": {
                    "description": "Upload article image (max 1MB)",
                    "type": "string",
                    "format": "binary"
                  },
                  "desc": {
                    "description": "Short description of the article",
                    "type": "string",
                    "example": "Meditations that help restore inner peace"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updates an article",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated an article!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/articles"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Articles"
        ],
        "summary": "Delete article by id",
        "operationId": "deleteArticle",
        "description": "Delete article by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "articleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "686809896ac14799aa90b54a"
            },
            "description": "ID of the article to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Article was successfully deleted. No content is returned."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register user",
        "security": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "user@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "password"
                  },
                  "avatar": {
                    "description": "User's avatar",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered and logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/user"
                        },
                        "accessToken": {
                          "type": "string",
                          "example": "A/dVIhgleNOD1t3GFA9JI0WGcusBik/de+oo/dF7"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "user@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "A/dVIhgleNOD1t3GFA9JI0WGcusBik/de+oo/dF7"
                        },
                        "user": {
                          "$ref": "#/components/schemas/user"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout user",
        "security": [],
        "responses": {
          "204": {
            "description": "User successfully logged out"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh session",
        "operationId": "refreshSession",
        "description": "Refresh session",
        "security": [],
        "responses": {
          "200": {
            "description": "Refresh session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "A/dVIhgleNOD1t3GFA9JI0WGcusBik/de+oo/dF7"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get list of authors",
        "operationId": "getAuthors",
        "description": "Retrieve a paginated list of authors",
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer"
            },
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found authors!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found authors!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/user"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 1
                        },
                        "perPage": {
                          "type": "number",
                          "example": 10
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 25
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 3
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by id",
        "operationId": "getUser",
        "description": "Get user by id",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the user which should be retrieved",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get user by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found a user with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/me/saved-articles": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get saved articles for a user",
        "operationId": "getSavedArticles",
        "description": "Retrieve a paginated list of saved articles for an authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "rate"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found saved articles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found saved articles!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/articles"
                          }
                        },
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "perPage": {
                          "type": "integer",
                          "example": 10
                        },
                        "totalItems": {
                          "type": "integer",
                          "example": 1
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 1
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/{id}/user-articles": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user's articles",
        "operationId": "getUserArticles",
        "description": "Retrieve a paginated list of articles created by a specific user",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the user whose articles should be retrieved",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "rate"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found user's articles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user's articles!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/articles"
                          }
                        },
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "perPage": {
                          "type": "integer",
                          "example": 10
                        },
                        "totalItems": {
                          "type": "integer",
                          "example": 1
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 1
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/me/saved-articles/{articleId}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Add article to saved list",
        "operationId": "addArticleToSaved",
        "description": "Add an article to the saved articles list of a specific user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "articleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66ff102bea7cc2e11f782401"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Article successfully added to saved list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully saved the article!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Remove article from saved list",
        "operationId": "deleteArticleFromSaved",
        "description": "Remove an article from the saved articles list of a specific user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "articleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66ff102bea7cc2e11f782401"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully removed the article from saved list"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "articles": {
        "type": "object",
        "required": [
          "_id",
          "title",
          "article",
          "img",
          "date",
          "ownerId"
        ],
        "properties": {
          "_id": {
            "description": "Article unique ID (MongoDB ObjectId)",
            "type": "string",
            "example": "686809896ac14799aa90b54a"
          },
          "ownerId": {
            "description": "ID of the user who owns this article (MongoDB ObjectId)",
            "type": "string",
            "example": "686809896ac14799aa90b54a"
          },
          "title": {
            "description": "Article title",
            "type": "string",
            "example": "When anxiety fills the space: the path to peace"
          },
          "article": {
            "description": "Contents of the article",
            "type": "string",
            "example": "In today`s world, where the rapid pace of events and the endless flow of information often rob us of our inner peace, finding harmony in everyday life becomes a real challenge"
          },
          "img": {
            "description": "Link to the uploaded article image",
            "type": "string",
            "format": "uri",
            "example": "https://ftp.goit.study/img/harmoniq/772a8103927c4f30b8d8c48avq.jpg"
          },
          "date": {
            "description": "Date of creation of the article",
            "type": "string",
            "format": "date",
            "example": "2025-05-05"
          },
          "rate": {
            "description": "Popularity of the article",
            "type": "integer",
            "example": 2
          },
          "desc": {
            "description": "Short description of the article",
            "type": "string",
            "example": "Meditations that help restore inner peace"
          }
        }
      },
      "user": {
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string"
          },
          "name": {
            "description": "User's name",
            "type": "string"
          },
          "email": {
            "description": "User's email address",
            "type": "string"
          },
          "avatarUrl": {
            "description": "URL to user's avatar",
            "type": "string"
          },
          "articlesAmount": {
            "description": "Number of articles saved by the user",
            "type": "number"
          },
          "savedArticles": {
            "description": "List of IDs of articles saved by the user",
            "type": "array",
            "items": {
              "type": "string",
              "example": "64b2f9d8a1234567890abcde"
            }
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "message",
                          "path",
                          "type",
                          "context"
                        ],
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Title is required"
                          },
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "title"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "example": "any.required"
                          },
                          "context": {
                            "type": "object",
                            "required": [
                              "label",
                              "key"
                            ],
                            "properties": {
                              "label": {
                                "type": "string",
                                "example": "title"
                              },
                              "key": {
                                "type": "string",
                                "example": "title"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Article not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "InternalServerError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Something went wrong on the server"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}